
v2.4
----
1. identification of 3D descriptor for classification enabled
2. new folder 'utilities' added to include useful tools for analyzing the results
3. input templates for multi-task learning added to the folder 'input_template'
4. new keyword 'task_weighting' added for multi-task learning of continuous properties.
5. keyword 'task' renamed to 'calc'
6. keyword 'nprop' renamed to 'ntask'
7. values for the keyword 'metric' renamed from 'LS_RMSE' and 'LS_MaxAE' to 'RMSE' and 'MaxAE', respectively.
8. 'roundoff error' problem fixed. SISSO involves writing (FC steps) and reading (DI steps) of features during 
the run. In all the previous versions, the precision of the output features data were set to only 5 significant 
figures, which is insufficient especially when features have large values, e.g. >10^5. Large roundoff error may 
cause nonoptimal results. In this version, the precision of the output features data has been changed to 
have 10 significant figures.



Previous Versions:

v2.3
----
1. Improvements on classification
Some top ranked yet poor descriptors are excluded. For example in the classification of two data group, 
if one domain with rectangular shape intersects another domain also with rectangular shape, 
then there is a non-zero overlap area but could be without data points inside the overlap region. 
Such descriptors may be ranked at top positions because there may be no or very few data_in_overlap which is 
used as the first metric for model ranking. These descriptors are not desired because of the actual big 
overlap between domains. Now in the version 2.3, such descriptors are supressed.
2. Compilation using GNU Fortran compilers enabled 
The code compiled using Intel ifort was found ~1.5X faster than that using GNU gfortran at the same optimization 
level -O2. Different compilers may lead to slightly different total feature spaces, e.g. due to numerical noise, 
and the difference is basically on the unimportant features. Thus, the choice of compiler should make no changes 
on the SISSO results (best models), as seen from my tests, yet for the reason of speed Intel compilers are recommended.


v2.2
----
1. input template files are provided for both quantitative (regression) and qualitative (classification) properties
2. DI is made faster (1~2X speed, especially when subs_sis is large)
3. for nprop>1 (multi-task learning), the overall scores/errors of properties is calculated with quadratic mean
4. Parallelization I/O bug fixed
5. Input parameters CV_fold and CV_repeat removed


v2.1
----
1. Parallelization I/O bug fixed
2. Input parameters CV_fold and CV_repeat removed


